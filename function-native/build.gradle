plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.1"
    id("io.micronaut.aot") version "3.3.1"
}
version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")
    implementation(project(":function-core"))
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime")
}
application {
    mainClass.set("com.example.FunctionLambdaRuntime")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}
tasks.named("assemble") {
    dependsOn(":shadowJar")
}
micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
        version = '1.0.1'
        optimizeServiceLoading = true
        convertYamlToJava = true
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
    }
}
tasks.named("dockerfileNative") {
    args(
            '-Xmx512m',
            "-XX:MaximumHeapSizePercent=80",
            "-Dio.netty.allocator.numDirectArenas=0",
            "-Dio.netty.noPreferDirect=true"
    )
}